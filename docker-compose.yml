services:
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin # Cambia estas credenciales
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000" # Grafana UI
    restart: always

  api-gateway:
    image: traefik:v2.4 # traefik
    hostname: api-gateway
    container_name: api-gateway
    depends_on:
      - user-service
      - notification-service
    command:
      - "--configFile=/etc/traefik/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/etc/traefik/traefik.yml"

  user-service:
    image: oscarrosero/microservices-user-service  # Cambiado a la nueva imagen
    env_file: .env
    container_name: user-service
    hostname: user-service
    restart: always
    depends_on:
      - kafka
      - mysql
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.rule=Host(`127.0.0.1`)"
      - "traefik.http.services.user-service.loadbalancer.server.port=8000"

  notification-service:
    image: oscarrosero/microservices-notification-service  # Cambiado a la nueva imagen
    container_name: notification-service
    restart: always
    hostname: notification-service
    env_file: .env
    depends_on:
      - user-service

  mysql:
    image: mysql:8.0
    hostname: mysql
    container_name: mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - mysql

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "${PROMETHEUS_PORT}:${PROMETHEUS_PORT}"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    hostname: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.1 # zookeeper
    container_name: zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

volumes:
  mysql_data:
  prometheus_data:
  grafana_data: